/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package itte;

import itte.clases.Conexion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;

/**
 *
 * @author Juan M S
 */
public class DialogoABMDetalles extends javax.swing.JDialog {

    /**
     * Creates new form DialogoABM
     */
    public DialogoABMDetalles() {
        super();
        initComponents();
    }

    private void setearListaDetalles(String nota) throws SQLException{
        List<String> lista = new ArrayList<String>();
        lista.removeAll(lista);
        Conexion conexion = new Conexion("academia");
        ResultSet rs = null;
        if(nota.equals("debito")){
            rs = conexion.consulta("select * from detalles_notas_debitocredito where concepto = 'debito'");
        } else if (nota.equals("credito")){
            rs = conexion.consulta("select * from detalles_notas_debitocredito where concepto = 'credito'");
        }
        while(rs.next()){
            lista.add(String.format("%d-%s",rs.getInt("id"),rs.getString("detalle")));
        }
        armarLista(lista,listaDetalles,jScrollPane1);
    }
    
    private void armarLista(List<String> lista, JList<String> jList, JScrollPane jScrollPane) {
        jList.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() {
                return lista.size();
            }

            public String getElementAt(int i) {
                return lista.get(i);
            }
        });
        jScrollPane.setViewportView(jList);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoRb = new javax.swing.ButtonGroup();
        rbNDeb = new javax.swing.JRadioButton();
        rbNCred = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDetalles = new javax.swing.JList<>();
        txtDetalle = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnNuevo = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();

        grupoRb.add(rbNDeb);
        grupoRb.add(rbNCred);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        rbNDeb.setText("Notas Debito");
        rbNDeb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbNDebItemStateChanged(evt);
            }
        });

        rbNCred.setText("Notas Credito");
        rbNCred.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbNCredItemStateChanged(evt);
            }
        });

        listaDetalles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listaDetallesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listaDetalles);

        jLabel1.setText("Detalle:");

        btnNuevo.setText("Guardar");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnBorrar.setText("Borrar");
        btnBorrar.setEnabled(false);
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.setEnabled(false);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rbNDeb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbNCred)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNuevo)
                                .addGap(18, 18, 18)
                                .addComponent(btnBorrar)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificar)
                                .addGap(0, 141, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(txtDetalle))
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(3, 3, 3)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNDeb)
                    .addComponent(rbNCred))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNuevo)
                            .addComponent(btnBorrar)
                            .addComponent(btnModificar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbNDebItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbNDebItemStateChanged
        if(rbNDeb.isSelected()){
            try {
                setearListaDetalles("debito");
            } catch (SQLException ex) {
                Logger.getLogger(DialogoABMDetalles.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rbNDebItemStateChanged

    private void rbNCredItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbNCredItemStateChanged
        if(rbNCred.isSelected()){
            try {
                setearListaDetalles("credito");
            } catch (SQLException ex) {
                Logger.getLogger(DialogoABMDetalles.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_rbNCredItemStateChanged

    private void listaDetallesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listaDetallesMouseClicked
        if(listaDetalles.getSelectedIndex()!=-1){
            String detalle = listaDetalles.getSelectedValue();
            String [] idYdetalle = detalle.split("-");
            txtDetalle.setText(idYdetalle[1]);
            btnModificar.setEnabled(true);
            btnBorrar.setEnabled(true);
        }
    }//GEN-LAST:event_listaDetallesMouseClicked

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        if(!txtDetalle.getText().isEmpty() && (rbNDeb.isSelected() || rbNCred.isSelected())){
            if(txtDetalle.getText().equals(listaDetalles.getSelectedValue())){
                JOptionPane.showMessageDialog(rootPane, "El detalle que intenta insertar ya existe.");
            } else {
                try {
                    String detalle = txtDetalle.getText();
                    String concepto = rbNDeb.isSelected()?"debito":"credito";
                    Conexion conexion = new Conexion("academia");
                    conexion.comando(String.format("insert into detalles_notas_debitocredito (concepto,detalle) values ('%s','%s')",concepto,detalle));
                    setearListaDetalles(concepto);
                } catch (SQLException ex) {
                    Logger.getLogger(DialogoABMDetalles.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Debe escribir un detalle y seleccionar un concepto.");
        }
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if(listaDetalles.getSelectedIndex()!=-1){
            if(!txtDetalle.getText().isEmpty() && (rbNDeb.isSelected() || rbNCred.isSelected())){
                try {
                    String detalle = listaDetalles.getSelectedValue();
                    String [] idYdetalle = detalle.split("-");
                    
                    idYdetalle[1] = txtDetalle.getText();
                    
                    String concepto = rbNDeb.isSelected()?"debito":"credito";
                    
                    Conexion conexion = new Conexion("academia");
                    conexion.comando(String.format("update detalles_notas_debitocredito set concepto='%s', detalle='%s' where id=%s",concepto,idYdetalle[1],idYdetalle[0]));
                    
                    setearListaDetalles(concepto);
                } catch (SQLException ex) {
                    Logger.getLogger(DialogoABMDetalles.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        if(listaDetalles.getSelectedIndex()!=-1){
            try {
                String detalle = listaDetalles.getSelectedValue();
                String [] idYdetalle = detalle.split("-");
                Conexion conexion = new Conexion("academia");
                conexion.comando(String.format("delete from detalles_notas_debitocredito where id=%s",idYdetalle[0]));
                
                String concepto = rbNDeb.isSelected()?"debito":"credito";
                setearListaDetalles(concepto);
            } catch (SQLException ex) {
                Logger.getLogger(DialogoABMDetalles.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.ButtonGroup grupoRb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaDetalles;
    private javax.swing.JRadioButton rbNCred;
    private javax.swing.JRadioButton rbNDeb;
    private javax.swing.JTextField txtDetalle;
    // End of variables declaration//GEN-END:variables
}
